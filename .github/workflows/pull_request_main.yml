name: CI for main

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read

jobs:
  autolabel:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      #############
      # autolabel #
      #############

      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-autolabel.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #####################
      # check version tag #
      #####################

      - name: version
        id: version
        run: |
          version=$(head -n 1 < version.txt | tr -d '\n')
          echo "::set-output name=version::${version}"

      - name: tag check
        run: |
          if $(git fetch origin "refs/tags/v${{ steps.version.outputs.version }}"); then
            echo "${{ steps.version.outputs.version }} tag already exists!" >&2
            exit 1
          fi

  gofmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: go mod
        run: |
          find . -name "*.go" | xargs gofmt -w

          # exit with error if there are any changes
          [ -z $(git status --porcelain) ] && git diff --quiet || git status && exit 1

  go_mod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: go mod
        run: |
          go mod tidy

          # exit with error if there are any changes
          [ -z $(git status --porcelain) ] && git diff --quiet || git status && exit 1

  go_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: go test
        run: |
          go test -v ./...

  license:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"
      - name: go-licenses
        run: |
          go install github.com/google/go-licenses@latest
          make license
          [ -z $(git status --porcelain) ] && git diff --quiet || git status && exit 1
