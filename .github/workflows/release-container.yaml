name: Release Container

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash -eux -o pipefail {0}

jobs:
  check_container_version:
    permissions:
      contents: write
      packages: write # ghcr
    outputs:
      version: ${{ steps.version.outputs.version }}
      run_upload: ${{ steps.check_container_version.outputs.run_upload }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Get package version
        id: version
        run: |
          ver=$(python .github/scripts/get_package_version.py)
          echo "version=${ver}" >> "$GITHUB_OUTPUT"
      - name: Check the version container already exists
        id: check_container_version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PKG_VERSION: ${{ steps.version.outputs.version }}
          REPO_OWNER: ${{ github.repository_owner }}
          CONTAINER_NAME: ${{ github.event.repository.name }}
        run: |
          versions=$(
            gh api -H "Accept: application/vnd.github.v3+json" "/users/${REPO_OWNER}/packages/container/${CONTAINER_NAME}/versions" \
              | jq -r '.[].metadata.container.tags | sort | .[]'
          )
          if grep -q "${PKG_VERSION}" <<<"${versions}"; then
            echo "Version $PKG_VERSION already exists"
            echo "run_upload=0" >> "$GITHUB_OUTPUT"
          else
            echo "Version $PKG_VERSION does not exist"
            echo "run_upload=1" >> "$GITHUB_OUTPUT"
          fi

  ################
  # docker build #
  ################

  docker:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    needs: check_container_version
    if: ${{ needs.check_container_version.outputs.run_upload == 1 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ needs.check_container_version.outputs.version }}
